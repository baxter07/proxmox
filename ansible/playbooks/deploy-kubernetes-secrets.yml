- hosts: kube-master
  vars:
    - kubernetes_api_server: https://kube-master.local.lan:6443
  tasks:
    - name: Create registry credentials secret
      shell: |
        kubectl create -n {{ item }} secret docker-registry registry-credentials \
          --docker-server=registry.nyckelpiga.io \
          --docker-username=admin \
          --docker-password={{ registry_token }} \
          --docker-email=admin@nyckelpiga.io
      loop:
        - drone-ci
        - chirpse-app
        - radio-app

    - name: Get base64 encoded kubeconfig
      shell: kubectl config view --raw | base64
      register: kubeconfig_base64

    - name: Get service account token
      shell: kubectl get secret emanuel -n default -o jsonpath={".data.token"}
      register: service_account_token_base64

    - name: Create kubeconfig secret for drone ci
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: kubeconfig
            namespace: drone-ci
          type: Opaque
          data:
            API_SERVER: "{{ kubernetes_api_server | b64encode }}"
            API_TOKEN: "{{ service_account_token_base64.stdout }}"
            KUBECONFIG: "{{ kubeconfig_base64.stdout }}"

    - name: Apply django app secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: django-secret
            namespace: chirpse-app
          type: Opaque
          data:
            DB_PASSWORD: "{{ chirpse_db_password | b64encode }}"
            DJANGO_SECRET_KEY: "{{ django_secret_key | b64encode }}"
            FIELD_ENCRYPTION_KEY: "{{ field_encryption_key | b64encode }}"

    - name: Apply linkerd secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: web-ingress-auth
            namespace: linkerd-viz
          data:
            auth: "{{ linkerd_password | b64encode }}"

    - name: Apply grafana user auth secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: grafana-admin-auth
            namespace: monitoring
          type: Opaque
          data:
            admin-user: "{{ 'admin' | b64encode }}"
            admin-password: "{{ admin_password | b64encode }}"
